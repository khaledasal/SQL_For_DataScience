Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000 
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id: 10000
ii. Hours = Business_id: 1562
iii. Category = Business_id: 2643
iv. Attribute = Business_id: 1115
v. Review = id: 10000 , Business_id: 8090  , user_id: 9581
vi. Checkin = Business_id : 493
vii. Photo = id: 10000, business_id: 6493
viii. Tip = user_id: 537, business_id: 3979
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer: 
       
      SELECT COUNT(*)
		FROM user
		WHERE id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NUL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1 		max: 5		avg: 3.6549	
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	select City , sum(review_count) as Total_Reviews 
	from business 
	group by city 
	order by Total_Reviews desc
	
	
	Copy and Paste the Result Below:

	+-----------------+---------------+
	| city            | Total_Reviews |
	+-----------------+---------------+
	| Las Vegas       |         82854 |
	| Phoenix         |         34503 |
	| Toronto         |         24113 |
	| Scottsdale      |         20614 |
	| Charlotte       |         12523 |
	| Henderson       |         10871 |
	| Tempe           |         10504 |
	| Pittsburgh      |          9798 |
	| Montréal        |          9448 |
	| Chandler        |          8112 |
	| Mesa            |          6875 |
	| Gilbert         |          6380 |
	| Cleveland       |          5593 |
	| Madison         |          5265 |
	| Glendale        |          4406 |
	| Mississauga     |          3814 |
	| Edinburgh       |          2792 |
	| Peoria          |          2624 |
	| North Las Vegas |          2438 |
	| Markham         |          2352 |
	| Champaign       |          2029 |
	| Stuttgart       |          1849 |
	| Surprise        |          1520 |
	| Lakewood        |          1465 |
	| Goodyear        |          1155 |
	+-----------------+---------------+
	(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

select stars , sum(review_count) 
from business
where city = 'Avon' 
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   1.5 |                10 |
|   2.5 |                 6 |
|   3.5 |                88 |
|   4.0 |                21 |
|   4.5 |                31 |
|   5.0 |                 3 |
+-------+-------------------+


ii. Beachwood

SQL code used to arrive at answer:

select stars , sum(review_count) 
from business
where city = 'Beachwood' 
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   2.0 |                 8 |
|   2.5 |                 3 |
|   3.0 |                11 |
|   3.5 |                 6 |
|   4.0 |                69 |
|   4.5 |                17 |
|   5.0 |                23 |
+-------+-------------------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

	select name , review_count 
	from user 
	group by id
	order by review_count desc
	limit 3
	
		
	Copy and Paste the Result Below:

	+--------+--------------+
	| name   | review_count |
	+--------+--------------+
	| Gerald |         2000 |
	| Sara   |         1629 |
	| Yuri   |         1339 |
	+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	yes but there are some cases that have many reviews but small fan base 

	select name , review_count , fans 
	from user 	
	group by id 
	order by fans desc

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

	yes 1780 for "love" and 232 for "hate" 

	SQL code used to arrive at answer:

	select count(text)
	from review 
	where text like '%hate%' 

	select count(text)
	from review 
	where text like '%love%'
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	select name , fans
	from user
	order by fans desc 
	limit 10 
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

yes the 4-5 stars have less hours than the 2-3 stars 


ii. Do the two groups you chose to analyze have a different number of reviews?

yes but it don't depend on the number of stars as two of the 4-5 stars busines have large number of review compared to the others but also there is some 4-5 stars business have a review close to the 2-3 business 
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Maybe it depends on the location of the city it may have different openning and closing hours and different number of reviews and so on, but in my example I tested for the same city 



SQL code used for analysis:

elect b.city , b.stars , c.category , b.review_count
       , h.hours
       ,  CASE
		WHEN b.stars BETWEEN 2 AND 3 THEN '2-3 stars'
		WHEN b.stars BETWEEN 4 AND 5 THEN '4-5 stars'
	       END AS star_rating 
       , CASE
	       WHEN hours LIKE "%monday%" THEN 1
	       WHEN hours LIKE "%tuesday%" THEN 2
		WHEN hours LIKE "%wednesday%" THEN 3
		WHEN hours LIKE "%thursday%" THEN 4
		WHEN hours LIKE "%friday%" THEN 5
		WHEN hours LIKE "%saturday%" THEN 6
		WHEN hours LIKE "%sunday%" THEN 7
	       END AS Day_code
from business b 
inner join category c on c.business_id = b.id 
inner join hours h on h.business_id = b.id 
where B.city = 'Las Vegas' and c.category = 'Shopping'  
              and ( star_rating = '2-3 stars' or star_rating = '4-5 stars')
group by star_rating,Day_code
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

total review count in open is 8480
total review coubt in closed is 1520 
         
         
ii. Difference 2:
         
average stars in open is 3.67900943396
average stars in closed is 3.52039473684
         
         
SQL code used for analysis:

select id,Avg(stars),count(review_count),is_open 
from business
group by is_open	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

predicting the number of fans the user will have
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

to predit whether the user will have more fanbase or not First we will take the name then we will need to collect reviews to know if he is seen alot, we will need funny,cool,usefull to determine if he is liked by the audience, we will need average star to indicate the quallity of the content, we will take compliment hot, more, cute, photos, profile to see how often the user in complemented also we will take the total number of friends                     
                  
iii. Output of your finished dataset:

+-----------+------------------------+--------------+--------+--------+--------+---------------+----------------+-----------------+-----------------+-------------------+--------------------+------+
| name      | id                     | review_count |  funny |   cool | useful | average_stars | compliment_hot | compliment_more | compliment_cute | compliment_photos | compliment_profile | fans |
+-----------+------------------------+--------------+--------+--------+--------+---------------+----------------+-----------------+-----------------+-------------------+--------------------+------+
| Amy       | -9I98YbNQnLdAmcYfb324Q |          609 |   2554 |   2751 |   3226 |          3.21 |           2370 |             154 |             281 |               245 |                145 |  503 |
| Mimi      | -8EnCioUmDygAbsYZmTeRQ |          968 |    138 |    159 |    257 |          4.05 |            983 |              68 |             137 |               471 |                 54 |  497 |
| Harald    | --2vR0DIsmQ6WfcSzKWigw |         1153 | 122419 | 122890 | 122921 |           4.4 |           7246 |            2204 |            1176 |             22219 |               2367 |  311 |
| Gerald    | -G7Zkl1wIWBBmD0KRy_sCw |         2000 |   2324 |  15008 |  17524 |           3.6 |            206 |              58 |               1 |               220 |                 19 |  253 |
| Christine | -0IiMAZI2SsQ7VmyzJjokQ |          930 |   6646 |   4321 |   4834 |          3.69 |            168 |              29 |               8 |               104 |                 39 |  173 |
| Lisa      | -g3XIcCb2b-BD0QBCcq2Sw |          813 |     13 |      6 |     48 |          4.09 |             85 |              15 |               4 |                88 |                  6 |  159 |
| Cat       | -9bbDysuiWeo2VShFJJtcw |          377 |    672 |   1076 |   1062 |          3.99 |            660 |              23 |              79 |               147 |                 53 |  133 |
| William   | -FZBTkAZEXoP7CYvRV2ZwQ |         1215 |   9361 |   9370 |   9363 |          4.41 |            100 |              37 |               0 |               179 |                 12 |  126 |
| Fran      | -9da1xk7zgnnfO1uTVYGkA |          862 |   7606 |   9344 |   9851 |           4.1 |           2334 |              71 |              43 |              2428 |                 94 |  124 |
| Lissa     | -lh59ko3dxChBSZ9U7LfUw |          834 |    150 |    342 |    455 |          3.68 |            417 |              35 |              17 |                24 |                 57 |  120 |
| Mark      | -B-QEUESGWHPE_889WJaeg |          861 |    570 |   2765 |   4008 |          3.36 |            109 |              14 |               2 |               111 |                  2 |  115 |
| Tiffany   | -DmqnhW4Omr3YhmnigaqHg |          408 |    984 |   1279 |   1366 |          4.09 |            197 |              15 |               2 |               155 |                 17 |  111 |
| bernice   | -cv9PPT7IHux7XUc9dOpkg |          255 |    112 |    109 |    120 |          3.95 |            175 |              21 |              26 |                47 |                 18 |  105 |
| Roanna    | -DFCC64NXgqrxlO8aLU5rg |         1039 |   1188 |    636 |   2995 |          3.71 |            235 |              34 |              13 |                46 |                  7 |  104 |
| Angela    | -IgKkE8JvYNWeGu8ze4P8Q |          694 |    164 |    105 |    158 |          3.89 |            141 |              12 |               3 |                23 |                  7 |  101 |
| .Hon      | -K2Tcgh2EKX6e6HqqIrBIQ |         1246 |   5851 |   5104 |   7850 |          3.14 |            226 |              34 |              48 |                42 |                 20 |  101 |
| Ben       | -4viTt9UC44lWCFJwleMNQ |          307 |   1155 |   1143 |   1180 |           3.7 |            434 |              48 |              56 |                80 |                 46 |   96 |
| Linda     | -3i9bhfvrM3F1wsC9XIB8g |          584 |   2736 |   3019 |   3177 |          4.06 |            574 |              37 |              92 |                33 |                 34 |   89 |
| Christina | -kLVfaJytOJY2-QdQoCcNQ |          842 |     34 |    102 |    158 |           4.1 |             24 |               2 |               1 |                32 |                  2 |   85 |
| Jessica   | -ePh4Prox7ZXnEBNGKyUEA |          220 |   2091 |   2067 |   2161 |           4.1 |            143 |              54 |              10 |                52 |                 36 |   84 |
| Greg      | -4BEUkLvHQntN6qPfKJP2w |          408 |    753 |    746 |    820 |          3.67 |           1004 |              91 |              80 |               249 |                 72 |   81 |
| Nieves    | -C-l8EHSLXtZZVfUAUhsPA |          178 |    774 |    940 |   1091 |          3.64 |            159 |               5 |              13 |                79 |                  3 |   80 |
| Sui       | -dw8f7FLaUmWR7bfJ_Yf0w |          754 |     18 |      2 |      9 |          3.62 |             41 |               5 |               6 |                25 |                  5 |   78 |
| Yuri      | -8lbUNlXVSoXqaRRiHiSNg |         1339 |    220 |    561 |   1166 |          4.11 |            109 |               8 |               3 |                47 |                  6 |   76 |
| Nicole    | -0zEEaDFIjABtPQni0XlHA |          161 |     10 |      6 |     13 |          3.87 |             79 |              19 |               9 |                 9 |                  5 |   73 |
+-----------+------------------------+--------------+--------+--------+--------+---------------+----------------+-----------------+-----------------+-------------------+--------------------+------+
         
         
iv. Provide the SQL code you used to create your final dataset:


select Name
	,id
	,review_count
	,funny
	,cool
	,useful
	,average_stars
	,compliment_hot
    ,compliment_more
	,compliment_cute
	,compliment_photos
	,compliment_profile
	,fans
from user  
group by id
order by fans desc

